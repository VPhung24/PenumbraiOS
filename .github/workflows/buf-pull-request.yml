name: buf-pull-request
on: pull_request
jobs:
  protobuf-fresh:
    name: Compile protobuf specs to swift code
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the source code
        uses: actions/checkout@v3
        with:
          repository: VPhung24/penumbra
          path: penumbra
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: false

      - name: Install protobuf compiler
        # use base for 'set -eo pipefail'
        shell: bash
        run: |
          curl -sSfL -O https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOC_VERSION}/protoc-${PROTOC_VERSION}-linux-x86_64.zip
          unzip protoc-${PROTOC_VERSION}-linux-x86_64.zip -d $HOME/.local
        env:
          # N.B. the major version is omitted in the download URLs,
          # so "21.8" actually means "3.21.8".
          PROTOC_VERSION: "21.8"
      - name: install swift protos dependencies
        uses: ConorMacBride/install-package@v1.1.0
        with: 
          brew: swift-protobuf grpc-swift
      - name: install nightly
        shell: bash
        run: rustup toolchain install nightly
      - name: build target directory
        shell: bash
        run: |
          cd $GITHUB_WORKSPACE/penumbra/penumbra-c-bindings
          cargo build --target-dir target
      - name: add ios and sim targets
        shell: bash
        run: |
          rustup target add "aarch64-apple-ios" "x86_64-apple-darwin" "aarch64-apple-darwin" "x86_64-apple-ios" "aarch64-apple-ios-sim"
          cargo build --release --target-dir target --target "aarch64-apple-ios" --target "x86_64-apple-darwin" --target "aarch64-apple-darwin" --target "x86_64-apple-ios" --target "aarch64-apple-ios-sim" 
     
      - name: add macOS Cat targets
        shell: bash
        run: |
          rustup component add rust-src --toolchain nightly-aarch64-apple-darwin
          cargo +nightly build --release --target-dir target -Z build-std --target x86_64-apple-ios-macabi --target aarch64-apple-ios-macabi
          
      - name: create libs
        shell: bash
        run: |
          lipo -create \
            target/x86_64-apple-darwin/release/libpenumbra_c_bindings.a \
            target/aarch64-apple-darwin/release/libpenumbra_c_bindings.a \
            -output libpenumbra_c_bindings_macos.a
          lipo -create \
            target/x86_64-apple-ios/release/libpenumbra_c_bindings.a \
            target/aarch64-apple-ios-sim/release/libpenumbra_c_bindings.a \
            -output libpenumbra_c_bindings_iossimulator.a
          lipo -create \
            target/x86_64-apple-ios-macabi/release/libpenumbra_c_bindings.a \
            target/aarch64-apple-ios-macabi/release/libpenumbra_c_bindings.a \
            -output libpenumbra_c_bindings_maccatalyst.a
     
      - name: build xcframework
        shell: bash
        run: |
          xcodebuild -create-xcframework \
            -library ./libpenumbra_c_bindings_macos.a \
            -headers ./include/ \
            -library ./libpenumbra_c_bindings_iossimulator.a \
            -headers ./include/ \
            -library ./libpenumbra_c_bindings_maccatalyst.a \
            -headers ./include/ \
            -library ./target/aarch64-apple-ios/release/libpenumbra_c_bindings.a \
            -headers ./include/ \
            -output penumbra_c_bindings.xcframework
      
      - name: zip
        shell: bash
        run: |
          zip -r bundle.zip penumbra_c_bindings.xcframework
